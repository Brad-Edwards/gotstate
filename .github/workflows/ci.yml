name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: rustfmt, clippy

    - name: Install cargo-audit
      run: cargo install cargo-audit@0.21.0

    - name: Install cargo-deny
      run: cargo install cargo-deny

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Check formatting
      run: cargo fmt -- --check

    - name: Run clippy
      run: cargo clippy -- -D warnings -A clippy::multiple_crate_versions -A clippy::dead_code -A clippy::complexity

    - name: Run tests
      run: cargo test --verbose

    - name: Security audit
      run: cargo audit

    - name: Check dependencies
      run: cargo deny check -c cargo-deny.toml

    - name: Build documentation
      run: cargo doc --no-deps

  coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Install cargo-tarpaulin
      run: cargo install cargo-tarpaulin@0.31.3

    - name: Generate coverage report
      run: cargo tarpaulin --out Xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5.1.1
