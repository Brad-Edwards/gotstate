# pyproject.toml
[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hsm"
version = "0.1.0"
description = "A hierarchical finite state machine library"
authors = [
    {name = "Brad Edwards", email = "brad@keplerops.com"},
]
requires-python = ">=3.8"
license = {text = "MIT"}

[tool.setuptools.packages.find]
where = ["."]
include = ["hsm*"]
exclude = ["tests*"]

[tool.black]
line-length = 120
target-version = ["py38", "py39", "py310"]
include = '\.pyi?$'
extend-exclude = '''
^/tests/fixtures
'''

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q -v --cov=hsm --cov-report=term-missing:skip-covered --cov-report=html --cov-report=xml"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["hsm"]
branch = true
omit = [
    "tests/*",
    "*/__init__.py",
    "setup.py",
    "*/.venv/*",
    "*/venv/*",
    "*/env/*",
    "*/__pycache__/*",
    "*/build/*",
    "*/dist/*",
    "*/.eggs/*",
    "*/.tox/*",
    "*/.pytest_cache/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
    "def main\\(\\):",
    "@abstract"
]
fail_under = 80
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "coverage-reports/html"

[tool.coverage.xml]
output = "coverage-reports/coverage.xml"

[tool.bandit]
exclude_dirs = ["tests", "tests/unit", "tests/integration"]
skips = ["B101"]  # Skip assert warnings globally
targets = ["hsm"]
